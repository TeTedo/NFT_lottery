/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { EventTest, EventTestInterface } from "../../contracts/EventTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_uint",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_string",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "Test",
    type: "event",
  },
  {
    inputs: [],
    name: "test",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061015d806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f8a8fd6d14610030575b600080fd5b61003861003a565b005b7f3b6f7e550fb2eb232031271696f6ba838a2749d9a3f7f6bf4b2a18dab78616cd424360405161006b9291906100eb565b60405180910390a1565b6000819050919050565b61008881610075565b82525050565b600082825260208201905092915050565b7f6869000000000000000000000000000000000000000000000000000000000000600082015250565b60006100d560028361008e565b91506100e08261009f565b602082019050919050565b6000606082019050610100600083018561007f565b8181036020830152610111816100c8565b9050610120604083018461007f565b939250505056fea26469706673582212203027fce389a27bbdf9f766e87138f10734e88c6beba82eea9b3c3893b5a5bca064736f6c63430008120033";

type EventTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EventTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EventTest__factory extends ContractFactory {
  constructor(...args: EventTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EventTest> {
    return super.deploy(overrides || {}) as Promise<EventTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EventTest {
    return super.attach(address) as EventTest;
  }
  override connect(signer: Signer): EventTest__factory {
    return super.connect(signer) as EventTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EventTestInterface {
    return new utils.Interface(_abi) as EventTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EventTest {
    return new Contract(address, _abi, signerOrProvider) as EventTest;
  }
}
