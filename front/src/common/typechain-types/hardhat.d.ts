/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Attack",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Attack__factory>;
    getContractFactory(
      name: "Raffle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Raffle__factory>;
    getContractFactory(
      name: "EventTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EventTest__factory>;
    getContractFactory(
      name: "TestToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestToken__factory>;
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "AccessControlEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlEnumerable__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "IAccessControlEnumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlEnumerable__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "IKIP13",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKIP13__factory>;
    getContractFactory(
      name: "IKIP17",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKIP17__factory>;
    getContractFactory(
      name: "IKIP17Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKIP17Burnable__factory>;
    getContractFactory(
      name: "IKIP17Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKIP17Enumerable__factory>;
    getContractFactory(
      name: "IKIP17Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKIP17Metadata__factory>;
    getContractFactory(
      name: "IKIP17MetadataMintable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKIP17MetadataMintable__factory>;
    getContractFactory(
      name: "IKIP17Mintable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKIP17Mintable__factory>;
    getContractFactory(
      name: "IKIP17Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKIP17Pausable__factory>;
    getContractFactory(
      name: "IKIP17Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKIP17Receiver__factory>;
    getContractFactory(
      name: "KIP13",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KIP13__factory>;
    getContractFactory(
      name: "KIP17",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KIP17__factory>;
    getContractFactory(
      name: "KIP17Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KIP17Burnable__factory>;
    getContractFactory(
      name: "KIP17Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KIP17Enumerable__factory>;
    getContractFactory(
      name: "KIP17MetadataMintable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KIP17MetadataMintable__factory>;
    getContractFactory(
      name: "KIP17Mintable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KIP17Mintable__factory>;
    getContractFactory(
      name: "KIP17Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KIP17Pausable__factory>;
    getContractFactory(
      name: "KIP17URIStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KIP17URIStorage__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "OwnableKIP17",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableKIP17__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "IUndefined",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUndefined__factory>;
    getContractFactory(
      name: "IUndefinedConfig",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUndefinedConfig__factory>;
    getContractFactory(
      name: "Undefined",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Undefined__factory>;
    getContractFactory(
      name: "UndefinedConfig",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UndefinedConfig__factory>;
    getContractFactory(
      name: "UndefinedUtil",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UndefinedUtil__factory>;

    getContractAt(
      name: "OwnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Enumerable>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Attack",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Attack>;
    getContractAt(
      name: "Raffle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Raffle>;
    getContractAt(
      name: "EventTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EventTest>;
    getContractAt(
      name: "TestToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestToken>;
    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "AccessControlEnumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlEnumerable>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "IAccessControlEnumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlEnumerable>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "IKIP13",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKIP13>;
    getContractAt(
      name: "IKIP17",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKIP17>;
    getContractAt(
      name: "IKIP17Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKIP17Burnable>;
    getContractAt(
      name: "IKIP17Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKIP17Enumerable>;
    getContractAt(
      name: "IKIP17Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKIP17Metadata>;
    getContractAt(
      name: "IKIP17MetadataMintable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKIP17MetadataMintable>;
    getContractAt(
      name: "IKIP17Mintable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKIP17Mintable>;
    getContractAt(
      name: "IKIP17Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKIP17Pausable>;
    getContractAt(
      name: "IKIP17Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKIP17Receiver>;
    getContractAt(
      name: "KIP13",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KIP13>;
    getContractAt(
      name: "KIP17",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KIP17>;
    getContractAt(
      name: "KIP17Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KIP17Burnable>;
    getContractAt(
      name: "KIP17Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KIP17Enumerable>;
    getContractAt(
      name: "KIP17MetadataMintable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KIP17MetadataMintable>;
    getContractAt(
      name: "KIP17Mintable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KIP17Mintable>;
    getContractAt(
      name: "KIP17Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KIP17Pausable>;
    getContractAt(
      name: "KIP17URIStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KIP17URIStorage>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "OwnableKIP17",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableKIP17>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "IUndefined",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUndefined>;
    getContractAt(
      name: "IUndefinedConfig",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUndefinedConfig>;
    getContractAt(
      name: "Undefined",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Undefined>;
    getContractAt(
      name: "UndefinedConfig",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UndefinedConfig>;
    getContractAt(
      name: "UndefinedUtil",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UndefinedUtil>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
