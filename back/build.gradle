plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.undefined'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}

repositories {
	mavenCentral()
}

dependencies {
	// Web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// Web3J
	implementation 'org.web3j:core:4.10.0'
	// rxjava
	implementation 'io.reactivex.rxjava3:rxjava:3.1.6'
	// websocket
	implementation 'org.java-websocket:Java-WebSocket:1.5.3'
	// Jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// flyway
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'
	// MYSQL Driver
	runtimeOnly 'com.mysql:mysql-connector-j'
	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	// H2 Driver
	runtimeOnly 'com.h2database:h2'
	// docs
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor:3.0.0'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:3.0.0'
	// Dev tools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

ext {
	// 아래서 사용할 변수 선언
	snippetsDir = file('build/generated-snippets')
}

tasks.named('test') {
	// 스니펫 조각들이 build/generated-snippets로 출력
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {

	configurations 'asciidoctorExt'
	dependsOn test // test에 의존하여 test작업 후 실행

	inputs.dir snippetsDir // snippetsDir 를 입력으로 구성

	// source가 없으면 .adoc파일을 전부 html로 만들어버림
	// source 지정시 특정 adoc만 HTML로 만든다.
	sources{
		include("**/index.adoc")
	}
}

// static/docs 폴더 비우기
asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}

// asccidoctor 작업 이후 생성된 HTML 파일을 static/docs 로 copy
task copyDocument(type: Copy) {
	dependsOn asciidoctor
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

// 파일 복사 후 빌드 진행
build {
	dependsOn copyDocument
}

